{"version":3,"sources":["Services/services.js","Pages/Login/Login.js","Pages/Register/Register.js","Components/SelectBox/index.js","Components/Form/index.js","Components/Banner/index.js","Pages/Booking/Booking.js","App.js","serviceWorker.js","index.js"],"names":["fetchApi","path","method","body","callback","url","obj","withCredentials","credentials","headers","JSON","stringify","fetch","then","response","json","data","status","catch","error","defaultForm","Login","history","useHistory","useState","formData","setFormData","message","setMessage","changeHandler","e","target","name","value","updatedData","serviceReturn","console","log","includes","push","alert","className","onSubmit","preventDefault","htmlFor","type","placeholder","id","onChange","required","to","Register","pattern","SelectBox","label","options","map","item","key","OptionList","FORM_DATA","vehicleType","serviceType","vehicleSubType","Form","loader","setLoader","VEHICLE_LIST","setVEHICLE_LIST","VEHICLE_TYPES","setVEHICLE_TYPES","SERVICE_TYPES","setSERVICE_TYPES","Date","startDate","setStartDate","startTime","setStartTime","formHandler","fetchVehicleType","fetchServiceList","useEffect","length","fetchAllVehicles","allVehicleReturn","allVehicleTypeReturn","serviceTypeReturn","list","unshift","class","role","event","autoComplete","disabled","selected","date","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","Banner","href","Booking","App","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b11124ef.chunk.js","sourcesContent":["export const URL = \"http://carwash-2020.herokuapp.com/v1\";\r\nexport const bearer = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlYzA0OTI5MC03MTRmLTQ5YWYtODcxYS1jMDllNTMxOTY1ZDQiLCJleHAiOjE1OTEzNzY3NDQsImlhdCI6MTU5MDQ4NzcxMX0.ePH_Myi4X3h7Oi6g_sqey91UutIFH4mSfT3UWmXgGhU\";\r\n\r\n\r\n\r\nexport const fetchApi = (path, method, body, callback) => {\r\n    let url = `${URL}/${path}`\r\n    let obj = {\r\n        method: method || 'GET',\r\n        withCredentials: true,\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Authorization': bearer,\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    if (body) {\r\n        obj.body = JSON.stringify(obj)\r\n    }\r\n    fetch(url, obj).then(function (response) {\r\n        return response.json();\r\n    }).then(function (data) {\r\n        callback({\r\n            status: 'SUCCESS',\r\n            data: data\r\n        })\r\n    }).catch(error => {\r\n        callback({\r\n            status: 'ERROR',\r\n            data: error\r\n        })\r\n    }\r\n\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './Login.css'\r\nimport { fetchApi } from '../../Services/services'\r\nconst defaultForm = {\r\n    \"password\": \"\",\r\n    \"userName\": \"\"\r\n}\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const [formData, setFormData] = useState(defaultForm)\r\n    const [message, setMessage] = useState('')\r\n    const changeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        let updatedData = { ...formData, [name]: value }\r\n        setFormData(updatedData)\r\n\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setMessage('')\r\n        fetchApi('auth/login', 'POST', formData, serviceReturn)\r\n\r\n    }\r\n    const serviceReturn = (data) => {\r\n        console.log(JSON.stringify(data))\r\n        if (data.status === 'SUCCESS') {\r\n            if (data.data.message && data.data.message.includes(\"User already reg\")) {\r\n                setMessage(data.data.message)\r\n            } else if (data.data.message && data.data.message.includes(\"Invalid\") ){\r\n                setMessage(data.data.message)\r\n            }else {\r\n                history.push('/booking')\r\n            }\r\n        } else {\r\n            alert('ERROR OCCURRED')\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form_center\">\r\n                <h1>Login</h1>\r\n                {message && <div className=\"alert alert-danger alert-dismissible fade show\">\r\n                    <strong>Error!</strong> {message}\r\n                </div>}\r\n                <form onSubmit={submitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"text\">Username:</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"userName\" placeholder=\"Enter Username\" id=\"text\" onChange={changeHandler} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"pwd\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Enter password\" onChange={changeHandler} id=\"pwd\" required />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    <hr></hr>\r\n                    <h5>Don't have account ? <Link to=\"/register\">Register</Link></h5>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { fetchApi } from '../../Services/services'\r\nimport './Register.css'\r\nconst defaultForm =\r\n{\r\n    \"firstName\": \"\",\r\n    \"mobileNum\": \"\",\r\n    \"gId\": null,\r\n    \"fId\": null,\r\n    \"email\": \"\",\r\n    \"userType\": \"USER\",\r\n    \"password\": \"\"\r\n}\r\nconst Register = () => {\r\n    let history = useHistory();\r\n    const [formData, setFormData] = useState(defaultForm)\r\n    const [message, setMessage] = useState('')\r\n    const changeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        let updatedData = { ...formData, [name]: value }\r\n        setFormData(updatedData)\r\n\r\n        console.log(updatedData)\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setMessage('')\r\n        fetchApi('auth/register', 'POST', formData, serviceReturn)\r\n    }\r\n\r\n    const serviceReturn = (data) => {\r\n        console.log(JSON.stringify(data))\r\n        if (data.status === 'SUCCESS') {\r\n            if (data.data.message && data.data.message.includes(\"User already reg\")) {\r\n                setMessage(data.data.message)\r\n            } else {\r\n                history.push('/booking')\r\n            }\r\n        } else {\r\n            alert('ERROR OCCURRED')\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form_center\">\r\n                <h1>Register</h1>\r\n                {message && <div className=\"alert alert-danger alert-dismissible fade show\">\r\n                    <strong>Error!</strong> {message}\r\n                </div>}\r\n                <form onSubmit={submitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"firstName\" placeholder=\"Enter first name\" id=\"firstName\" onChange={changeHandler} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"lastName\" placeholder=\"Enter last name\" id=\"lastName\" onChange={changeHandler} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email address:</label>\r\n                        <input type=\"email\" className=\"form-control\" name=\"userName\" placeholder=\"Enter email\" id=\"email\" onChange={changeHandler} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"mobileNum\">Phone number:</label>\r\n                        <input type=\"text\" className=\"form-control\" pattern=\"[789][0-9]{9}\" name=\"mobileNum\" placeholder=\"Enter email\" id=\"mobileNum\" onChange={changeHandler} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Enter password\" id=\"pwd\" onChange={changeHandler} required />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    <hr></hr>\r\n                    <h5>Already have account ? <Link to=\"/\">Login</Link></h5>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React from 'react';\r\nimport './style.css'\r\nconst OptionList = (options) => options.map(item => <option key={item.label} value={item.value}>{item.label}</option>)\r\nconst SelectBox = ({ id, name, label, options, changeHandler }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={id}>{label}</label>\r\n            <select className=\"form-control\" name={name} id={id} onChange={changeHandler}>\r\n                {OptionList(options)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectBox","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SelectBox from '../SelectBox/index'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './style.css'\r\nimport { fetchApi, URL, bearer } from '../../Services/services'\r\nimport { CAR_TYPES, SERVICES_TYPES } from '../../Constants.js'\r\n\r\nconst FORM_DATA = {\r\n    vehicleType: '',\r\n    serviceType: '',\r\n    vehicleSubType: ''\r\n}\r\nconst Form = () => {\r\n    const [formData, setFormData] = useState(FORM_DATA);\r\n    const [loader, setLoader] = useState(false);\r\n    const [VEHICLE_LIST, setVEHICLE_LIST] = useState([]);\r\n    const [VEHICLE_TYPES, setVEHICLE_TYPES] = useState([]);\r\n    const [SERVICE_TYPES, setSERVICE_TYPES] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [startTime, setStartTime] = useState(new Date());\r\n    const formHandler = e => {\r\n        const { name, value } = e.target\r\n        let updatedData = { ...formData, [name]: value }\r\n\r\n        setFormData(updatedData)\r\n        if (name === 'vehicleType' && value) {\r\n            console.log(\"carType\")\r\n            fetchVehicleType(value)\r\n        }\r\n        if (name === 'vehicleSubType' && value) {\r\n            fetchServiceList(value)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (VEHICLE_LIST.length === 0) {\r\n            fetchAllVehicles()\r\n        }\r\n\r\n    }, [])\r\n\r\n    const fetchAllVehicles = () => {\r\n        setLoader(true)\r\n        fetchApi('vehicle/getAllVehicle', 'GET', null, allVehicleReturn)\r\n    }\r\n    const fetchVehicleType = (value) => {\r\n        setLoader(true)\r\n        fetchApi(`vehicle/getVehicleType/${value}`, 'GET', null, allVehicleTypeReturn)\r\n    }\r\n    const fetchServiceList = (value) => {\r\n        setLoader(true)\r\n        console.log(\"FORM_DATA\", formData)\r\n        fetchApi(`booking/getPackageList/${formData.vehicleType}/${value}`, 'GET', null, serviceTypeReturn)\r\n    }\r\n\r\n    const allVehicleReturn = (data) => {\r\n        setLoader(false)\r\n        if (data.status === 'SUCCESS') {\r\n            let list = data.data.map(item => {\r\n                return { \"label\": item, \"value\": item }\r\n            })\r\n            list.unshift({ \"label\": 'Select', \"value\": '' })\r\n            setVEHICLE_LIST(list)\r\n        }\r\n    }\r\n    const allVehicleTypeReturn = (data) => {\r\n        console.log(JSON.stringify('allVehicleTypeReturn', data))\r\n        setLoader(false)\r\n        if (data.status === 'SUCCESS') {\r\n            let list = data.data.map(item => {\r\n                return { \"label\": item, \"value\": item }\r\n            })\r\n            list.unshift({ \"label\": 'Select', \"value\": '' })\r\n            setVEHICLE_TYPES(list)\r\n        }\r\n    }\r\n    const serviceTypeReturn = (data) => {\r\n        console.log(JSON.stringify('allVehicleTypeReturn', data))\r\n        setLoader(false)\r\n        if (data.status === 'SUCCESS') {\r\n            let list = data.data.map(item => {\r\n                return { \"label\": item, \"value\": item }\r\n            })\r\n            list.unshift({ \"label\": 'Select', \"value\": '' })\r\n            setSERVICE_TYPES(list)\r\n        }\r\n    }\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        console.log(formData)\r\n        console.log(startDate)\r\n        console.log(startTime)\r\n    }\r\n    console.log(JSON.stringify(VEHICLE_LIST))\r\n    return (\r\n        <>\r\n            {loader && <div class=\"loading\">Loading&#8230;</div>}\r\n            <form className=\"form\" role=\"form\" onSubmit={submitHandler} autoComplete=\"off\" >\r\n                {VEHICLE_LIST.length > 0 && <SelectBox id=\"vehicleType\"\r\n                    name=\"vehicleType\"\r\n                    options={VEHICLE_LIST}\r\n                    changeHandler={formHandler}\r\n                    label=\"Select Your Vehicle Type\" />}\r\n                {VEHICLE_TYPES.length > 0 && <SelectBox id=\"vehicleSubType\"\r\n                    name=\"vehicleSubType\"\r\n                    options={VEHICLE_TYPES}\r\n                    changeHandler={formHandler}\r\n                    label=\"Select Your Car Type\" />}\r\n                {FORM_DATA.vehicleSubType && <div className=\"form-group\">\r\n                    <label htmlFor=\"location\">Available Location</label>\r\n                    <input className=\"form-control\" value=\"Wakad, Pune\" name=\"location\" disabled />\r\n                </div>}\r\n                {SERVICE_TYPES.length > 0 && <SelectBox id=\"serviceType\"\r\n                    name=\"serviceType\"\r\n                    options={SERVICE_TYPES}\r\n                    changeHandler={formHandler}\r\n                    label=\"Select Service Type\" />}\r\n                <div className=\"form-group d-flex\">\r\n                    <div>\r\n                        <label htmlFor=\"Select Date\" className=\"d-block\">Select Date</label>\r\n                        <DatePicker selected={startDate} className=\"form-control  w-100\" onChange={date => setStartDate(date)} />\r\n                    </div>\r\n                    <div className=\"ml-3\">\r\n                        <label htmlFor=\"Select Time\" className=\"d-block\">Select Time</label>\r\n                        <DatePicker\r\n                            className=\"form-control w-100\"\r\n                            selected={startTime}\r\n                            onChange={date => setStartTime(date)}\r\n                            showTimeSelect\r\n                            showTimeSelectOnly\r\n                            timeIntervals={15}\r\n                            timeCaption=\"Time\"\r\n                            dateFormat=\"h:mm aa\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"form-group d-flex\">\r\n                    <button type=\"submit\" className=\"btn btn-default btn-lg btn-block text-center text-uppercase text-white bg-yellow\">Book Now</button>\r\n                </div>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react';\r\nimport Form from '../Form/index'\r\nimport './style.css'\r\nconst Banner = () => {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"banner-area relative\" id=\"home\">\r\n\r\n                <div className=\"overlay overlay-bg\"></div>\r\n                <div className=\"container \">\r\n                    <a className=\"heading_logo\" href=\"/\">My <span className=\"yellow\">Car Wash</span></a>\r\n                    <div className=\"row fullscreen d-flex align-items-center justify-content-center pt-5 height-100vh\">\r\n                        <div className=\"banner-content col-lg-7 col-md-6 \">\r\n                            <h6 className=\"text-white \">Professional washing and cleaning of your car</h6>\r\n                            <h1 className=\"text-white text-uppercase\">\r\n                                <span className=\"yellow\">Your Car Always in Great Hand With Us</span>\r\n                            </h1>\r\n                            <p className=\"pt-20 pb-20 text-white\">\r\n                                Our service is not just a wash as it is a real treatment for your car.  The car gets a rebirth due to our CCS which is truly regenerative therapy. Research has shown, steam pressure cleaning prevents corrosion for a period of 2 years when compared to the regular use of water for cleaning.\r\n\t\t\t\t\t\t\t</p>\r\n                        </div>\r\n                        <div className=\"col-lg-5  col-md-6 header-right\">\r\n                            <h4 className=\"text-white pb-30 mb-5\">Book Your Appointment</h4>\r\n                            <Form />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner","import React from 'react';\r\nimport './Booking.css';\r\nimport Banner from '../../Components/Banner';\r\n\r\nfunction Booking() {\r\n    return (\r\n        <main>\r\n            <Banner/>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Booking;\r\n\r\n\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './Pages/Login/Login'\nimport Register from './Pages/Register/Register'\nimport Booking from './Pages/Booking/Booking'\nimport './App.css';\nfunction App() {\n\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/\" component={Login} exact />\n        <Route path=\"/register\" component={Register} exact />\n        <Route path=\"/booking\" component={Booking} />\n        {/* <Route component={Error} /> */}\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}